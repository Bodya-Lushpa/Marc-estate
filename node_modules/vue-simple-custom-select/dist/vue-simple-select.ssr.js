'use strict';var Vue=require('vue');function _interopDefaultLegacy(e){return e&&typeof e==='object'&&'default'in e?e:{'default':e}}var Vue__default=/*#__PURE__*/_interopDefaultLegacy(Vue);function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}/* script */

/* template */
var __vue_render__$1 = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('svg', {
    staticClass: "w-6 h-6",
    attrs: {
      "fill": "none",
      "stroke": "currentColor",
      "viewBox": "0 0 24 24",
      "xmlns": "http://www.w3.org/2000/svg"
    }
  }, [_vm._ssrNode("<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>")]);
};

var __vue_staticRenderFns__$1 = [];
/* style */

var __vue_inject_styles__$1 = undefined;
/* scoped */

var __vue_scope_id__$1 = undefined;
/* module identifier */

var __vue_module_identifier__$1 = "data-v-3620d98c";
/* functional template */

var __vue_is_functional_template__$1 = false;
/* style inject */

/* style inject SSR */

/* style inject shadow dom */

var __vue_component__$1 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$1,
  staticRenderFns: __vue_staticRenderFns__$1
}, __vue_inject_styles__$1, {}, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, undefined, undefined, undefined);var isOption = function isOption(option) {
  return _typeof(option) === 'object' && !Array.isArray(option) && 'value' in option && 'label' in option;
};
var isMultipleOptions = function isMultipleOptions(options) {
  return Array.isArray(options) && options.every(function (option) {
    return isOption(option);
  });
};
var _uid = function _uid() {
  var generate = function generate() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  };

  return "".concat(generate(), "-").concat(generate(), "-").concat(generate(), "-").concat(generate());
};var clickOutside = {
  bind: function bind(el, binding, vnode) {
    el.clickOutsideEvent = function (event) {
      if (!(el === event.target || el.contains(event.target))) {
        vnode.context[binding.expression](event);
      }
    };

    document.body.addEventListener('click', el.clickOutsideEvent);
  },
  unbind: function unbind(el) {
    document.body.removeEventListener('click', el.clickOutsideEvent);
  }
};var script = /*#__PURE__*/Vue__default['default'].extend({
  name: 'VueSimpleSelect',
  components: {
    IconChevron: __vue_component__$1
  },
  data: function data() {
    return {
      /**
       * Unique component ID
       */
      uid: _uid(),

      /**
       * If the dropdown is shown or not
       */
      show: false,

      /**
       * The currently selected option, if not in multiple mode
       */
      selectedOption: {},

      /**
       * The currently selected options, if in multiple mode
       */
      selectedOptions: []
    };
  },
  directives: {
    /**
     * Allows to close the dropdown when clicking outside
     */
    'click-outside': _objectSpread2({}, clickOutside)
  },
  model: {
    /**
     * We bind the v-model to the prop "value" and to the "change" event
     */
    prop: 'value',
    event: 'change'
  },
  props: {
    /**
     * The value to be displayed when nothing is selected
     */
    placeholder: {
      type: String,
      default: ''
    },

    /**
     * The name of the transition to use when showing or hiding the dropdowm.
     */
    transition: {
      type: String,
      default: 'slide-fade'
    },

    /**
     * If the select should not be closed when clicking outside
     */
    noClickOutside: {
      type: Boolean,
      default: false
    },

    /**
     * Ability to place a title on the select button
     */
    title: {
      type: String,
      default: ''
    },

    /**
     * Ability to open the dropdown by default
     */
    opened: {
      type: Boolean,
      default: false
    },

    /**
     * The default value selected
     */
    value: {
      type: [Array, Object],
      default: null,
      required: true
    },

    /**
     * If the select allows multiple items to be selected
     */
    multiple: {
      type: Boolean,
      default: false
    },

    /**
     * Can be used to specify what element labels the button
     */
    labelledby: {
      type: String,
      default: ''
    },

    /**
     * The options displaying inside the dropdown
     */
    options: {
      type: Array,
      required: true,
      default: function _default() {
        return [];
      },
      validator: function validator(value) {
        return value.every(function (option) {
          return isOption(option);
        });
      }
    }
  },
  mounted: function mounted() {
    if (this.value === undefined) {
      console.warn('The value should not be undefined');
    } else if (this.multiple && this.value && isOption(this.value)) {
      console.warn('You specified that the select should be multiple, but only gave a single Option as value.');
    }
    /**
     * If we should initialise a single value
     */
    else if (this.value && isOption(this.value)) {
        var value = this.value;
        this.selectedOption = _objectSpread2({
          uid: _uid()
        }, value);
      }
      /**
       * If we should initialise multiple values
       */
      else if (this.multiple && this.value && isMultipleOptions(this.value)) {
          var _value = this.value;

          var options = _value.map(function (option) {
            return _objectSpread2({
              uid: _uid()
            }, option);
          });

          this.selectedOptions = options;
        }
    /**
     * Opening the dropdown or not
     */


    this.show = this.opened;
  },
  computed: {
    /**
     * Maps unique IDS to each option
     */
    _options: function _options() {
      var options = this.options;
      return options.map(function (option) {
        return _objectSpread2({
          uid: _uid()
        }, option);
      });
    },

    /**
     * Returns the active selected option, for accessibility purposes
     */
    activeDescendant: function activeDescendant() {
      var option = this.selectedOption;

      if (!this.multiple && option && isOption(option)) {
        return "vue-simple-select-option-".concat(option.uid);
      }

      return null;
    }
  },
  methods: {
    /**
     * Returns an Array of every DOM elements corresponding to an select option
     */
    getDOMOptions: function getDOMOptions() {
      var options = Object.entries(this.$refs).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        return key.includes('vue-simple-select-option') ? value : null;
      }).filter(function (value) {
        return value;
      }).flat();
      return options;
    },

    /**
     * Handles navigating with Home and End keys
     */
    gotToOption: function gotToOption(event) {
      var options = this.getDOMOptions();

      if (options && options.length) {
        var lastIndex = options.length - 1;

        if (event.code === 'End') {
          options && options.length && options[lastIndex] && options[lastIndex].focus();
        } else if (event.code === 'Home') {
          options && options.length && options[0].focus();
        }
      }
    },

    /**
     * Handles navigating Arrow Down
     */
    gotToNextOption: function gotToNextOption(_) {
      /**
       * Every Options
       */
      var options = this.getDOMOptions();

      if (options && options.length) {
        /**
         * Currently focused element
         */
        var currentElement = document.activeElement;
        var isCurrentElementOption = currentElement && currentElement.id.includes('vue-simple-select-option');
        /**
         * If it is an option
         */

        if (isCurrentElementOption) {
          /**
           * Find the next one and focus it
           */
          var elementIndex = options.findIndex(function (element) {
            return element.id === (currentElement && currentElement.id);
          });

          if (elementIndex > -1) {
            var nextElementIndex = elementIndex + 1;
            var nextElement = options[nextElementIndex];

            if (nextElement) {
              nextElement.focus();
            }
          }
        } else {
          /**
           * Focus the first one
           */
          options && options[0] && options[0].focus();
        }
      }
    },

    /**
     * Handles navigating Arrow Up
     */
    gotToPreviousOption: function gotToPreviousOption(_) {
      /**
       * Currently focused element
       */
      var options = this.getDOMOptions();

      if (options && options.length) {
        /**
         * Currently focused element
         */
        var currentElement = document.activeElement;
        var isCurrentElementOption = currentElement && currentElement.id.includes('vue-simple-select-option');
        /**
         * If it is an option
         */

        if (isCurrentElementOption) {
          /**
           * Find the previous one and focus it
           */
          var elementIndex = options.findIndex(function (element) {
            return element.id === (currentElement && currentElement.id);
          });

          if (elementIndex > -1) {
            var previousElementIndex = elementIndex - 1;
            var previousElement = options[previousElementIndex];

            if (previousElement) {
              previousElement.focus();
            }
          }
        }
      }
    },

    /**
     * Handles the clicking outside
     */
    handleOutside: function handleOutside() {
      if (!this.noClickOutside) {
        this.hideSelect();
      }
    },

    /**
     * Shows the dropdown
     */
    showSelect: function showSelect() {
      this.show = true;
      this.$emit('show');
    },

    /**
     * Hides the dropdown
     */
    hideSelect: function hideSelect() {
      this.show = false;
      this.$emit('hide');
    },

    /**
     * Handles seleting a value
     */
    selectValue: function selectValue(option) {
      var _this = this;

      if (this.multiple) {
        if (this.isSelected(option)) {
          this.selectedOptions = this.selectedOptions.filter(function (_option) {
            return _option.uid !== option.uid;
          });
        } else {
          this.selectedOptions.push(option);
        }

        var options = this.selectedOptions.map(function (option) {
          return _this.parseOption(option);
        });
        this.$emit('change', options);
      } else {
        this.selectedOption = option;
        this.$emit('change', this.parseOption(option));
        this.hideSelect();
      }
    },

    /**
     * Handles toggling between showing and hiding the dropdown
     */
    handleClick: function handleClick() {
      this.show ? this.hideSelect() : this.showSelect();
    },

    /**
     * Deletes the uid from the option if it exists
     */
    parseOption: function parseOption(option) {
      if (option) {
        if (option.uid) {
          var duplicate = _objectSpread2({}, option);

          delete duplicate.uid;
          return duplicate;
        }

        return option;
      }
    },

    /**
     * If the given option is Selected
     */
    isSelected: function isSelected(option) {
      if (option && !this.multiple && this.selectedOption) {
        return this.selectedOption.uid === option.uid;
      } else if (option && this.multiple && this.selectedOptions.length) {
        return !!this.selectedOptions.find(function (_option) {
          return _option.uid === option.uid;
        });
      }

      return false;
    }
  }
});function createInjectorSSR(context) {
    if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
    }
    if (!context)
        return () => { };
    if (!('styles' in context)) {
        context._styles = context._styles || {};
        Object.defineProperty(context, 'styles', {
            enumerable: true,
            get: () => context._renderStyles(context._styles)
        });
        context._renderStyles = context._renderStyles || renderStyles;
    }
    return (id, style) => addStyle(id, style, context);
}
function addStyle(id, css, context) {
    const group = css.media || 'default' ;
    const style = context._styles[group] || (context._styles[group] = { ids: [], css: '' });
    if (!style.ids.includes(id)) {
        style.media = css.media;
        style.ids.push(id);
        let code = css.source;
        style.css += code + '\n';
    }
}
function renderStyles(styles) {
    let css = '';
    for (const key in styles) {
        const style = styles[key];
        css +=
            '<style data-vue-ssr-id="' +
                Array.from(style.ids).join(' ') +
                '"' +
                (style.media ? ' media="' + style.media + '"' : '') +
                '>' +
                style.css +
                '</style>';
    }
    return css;
}/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    directives: [{
      name: "click-outside",
      rawName: "v-click-outside",
      value: _vm.handleOutside,
      expression: "handleOutside"
    }],
    staticClass: "vue-simple-select-container",
    on: {
      "keyup": [function ($event) {
        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, "down", 40, $event.key, ["Down", "ArrowDown"])) {
          return null;
        }

        return _vm.gotToNextOption($event);
      }, function ($event) {
        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])) {
          return null;
        }

        return _vm.gotToPreviousOption($event);
      }, _vm.gotToOption]
    }
  }, [_vm._t("button", [_c('button', {
    staticClass: "vue-simple-select-button",
    attrs: {
      "title": _vm.title,
      "aria-haspopup": "listbox",
      "aria-expanded": _vm.show,
      "aria-owns": "dropdown-" + _vm.uid,
      "aria-labelledby": _vm.labelledby,
      "aria-activedescendant": _vm.activeDescendant
    },
    on: {
      "click": _vm.handleClick
    }
  }, [_vm._t("inner-button"), _vm._v(" "), _vm.placeholder && (!_vm.selectedOption || !Object.keys(_vm.selectedOption).length) && (!_vm.selectedOptions || !_vm.selectedOptions.length) ? _c('span', {
    staticClass: "vue-simple-select-placeholder"
  }, [_vm._v("\n        " + _vm._s(_vm.placeholder) + "\n      ")]) : _vm._e(), _vm._v(" "), _vm.selectedOptions && _vm.multiple && _vm.selectedOptions.length ? _c('span', {
    staticClass: "vue-simple-select-selected"
  }, [_c('span', {
    staticClass: "vue-simple-select-label"
  }, [_vm._v(_vm._s(_vm.selectedOptions.length) + " ")]), _vm._v("selected\n      ")]) : _vm.selectedOption ? _c('span', {
    staticClass: "vue-simple-select-selected-option"
  }, [_vm._v("\n        " + _vm._s(_vm.selectedOption.label) + "\n      ")]) : _vm._e(), _vm._v(" "), _vm._t("before-icon"), _vm._v(" "), _vm._t("icon", [_c('icon-chevron', {
    staticClass: "vue-simple-select-icon",
    class: {
      reverse: _vm.show
    }
  })], null, {
    show: _vm.show
  }), _vm._v(" "), _vm._t("after-icon")], 2)], null, {
    handleClick: _vm.handleClick,
    showSelect: _vm.showSelect,
    hideSelect: _vm.hideSelect
  }), _vm._ssrNode(" "), _c('transition', {
    attrs: {
      "name": _vm.transition
    }
  }, [_vm.show ? _vm._t("dropdown", [_c('div', {
    staticClass: "vue-simple-select-dropdown",
    attrs: {
      "id": "dropdown-" + _vm.uid
    }
  }, [_vm._t("dropdown-content", [_c('ul', {
    ref: "options-list",
    staticClass: "vue-simple-select-list",
    attrs: {
      "role": "listbox"
    }
  }, _vm._l(_vm._options, function (option, index) {
    return _c('li', {
      key: "option-" + index,
      staticClass: "vue-simple-select-list-item"
    }, [_vm._t("single-option", [_c('button', {
      ref: "vue-simple-select-option-" + option.uid,
      refInFor: true,
      staticClass: "vue-simple-select-option",
      class: {
        selected: _vm.isSelected(option)
      },
      attrs: {
        "id": "vue-simple-select-option-" + option.uid,
        "role": "option"
      },
      on: {
        "click": function click($event) {
          return _vm.selectValue(option);
        }
      }
    }, [_vm._v("\n                  " + _vm._s(option.label) + "\n                ")])], null, {
      option: option,
      index: index,
      selectValue: _vm.selectValue,
      isSelected: _vm.isSelected
    })], 2);
  }), 0)], null, {
    selectValue: _vm.selectValue,
    isSelected: _vm.isSelected
  })], 2)], null, {
    selectValue: _vm.selectValue,
    isSelected: _vm.isSelected,
    show: _vm.show
  }) : _vm._e()], 2)], 2);
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = function __vue_inject_styles__(inject) {
  if (!inject) return;
  inject("data-v-46be17c1_0", {
    source: "*{--tw-shadow:0 0 transparent;--tw-ring-inset:var(--tw-empty, );/*!*//*!*/--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent}@keyframes vss-spin{to{transform:rotate(1turn)}}@keyframes vss-ping{75%,to{transform:scale(2);opacity:0}}@keyframes vss-pulse{50%{opacity:.5}}@keyframes vss-bounce{0%,to{transform:translateY(-25%);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:none;animation-timing-function:cubic-bezier(0,0,.2,1)}}.vue-simple-select-container{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;/*! tailwindcss v2.1.2 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */min-width:8rem;position:relative;--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.vue-simple-select-container .slide-fade-enter-active,.vue-simple-select-container .slide-fade-leave-active{transition:all .3s ease}.vue-simple-select-container .slide-fade-enter,.vue-simple-select-container .slide-fade-leave-to{transform:translateY(-10px);opacity:0}.vue-simple-select-container hr{height:0;color:inherit}.vue-simple-select-container abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}.vue-simple-select-container b,.vue-simple-select-container strong{font-weight:bolder}.vue-simple-select-container code,.vue-simple-select-container kbd,.vue-simple-select-container pre,.vue-simple-select-container samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}.vue-simple-select-container small{font-size:80%}.vue-simple-select-container sub,.vue-simple-select-container sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}.vue-simple-select-container sub{bottom:-.25em}.vue-simple-select-container sup{top:-.5em}.vue-simple-select-container table{text-indent:0;border-color:inherit}.vue-simple-select-container button,.vue-simple-select-container input,.vue-simple-select-container optgroup,.vue-simple-select-container select,.vue-simple-select-container textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}.vue-simple-select-container button,.vue-simple-select-container select{text-transform:none}.vue-simple-select-container [type=button],.vue-simple-select-container [type=reset],.vue-simple-select-container [type=submit],.vue-simple-select-container button{-webkit-appearance:button}.vue-simple-select-container ::-moz-focus-inner{border-style:none;padding:0}.vue-simple-select-container :-moz-focusring{outline:1px dotted ButtonText}.vue-simple-select-container :-moz-ui-invalid{box-shadow:none}.vue-simple-select-container legend{padding:0}.vue-simple-select-container progress{vertical-align:baseline}.vue-simple-select-container ::-webkit-inner-spin-button,.vue-simple-select-container ::-webkit-outer-spin-button{height:auto}.vue-simple-select-container [type=search]{-webkit-appearance:textfield;outline-offset:-2px}.vue-simple-select-container ::-webkit-search-decoration{-webkit-appearance:none}.vue-simple-select-container ::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.vue-simple-select-container summary{display:list-item}.vue-simple-select-container blockquote,.vue-simple-select-container dd,.vue-simple-select-container dl,.vue-simple-select-container figure,.vue-simple-select-container h1,.vue-simple-select-container h2,.vue-simple-select-container h3,.vue-simple-select-container h4,.vue-simple-select-container h5,.vue-simple-select-container h6,.vue-simple-select-container hr,.vue-simple-select-container p,.vue-simple-select-container pre{margin:0}.vue-simple-select-container button{background-color:transparent;background-image:none}.vue-simple-select-container button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}.vue-simple-select-container fieldset{margin:0;padding:0}.vue-simple-select-container ol,.vue-simple-select-container ul{list-style:none;margin:0;padding:0}.vue-simple-select-container html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}.vue-simple-select-container body{font-family:inherit;line-height:inherit}.vue-simple-select-container *,.vue-simple-select-container :after,.vue-simple-select-container :before{box-sizing:border-box;border:0 solid #e5e7eb}.vue-simple-select-container hr{border-top-width:1px}.vue-simple-select-container img{border-style:solid}.vue-simple-select-container textarea{resize:vertical}.vue-simple-select-container input:-ms-input-placeholder,.vue-simple-select-container textarea:-ms-input-placeholder{opacity:1;color:#9ca3af}.vue-simple-select-container input::placeholder,.vue-simple-select-container textarea::placeholder{opacity:1;color:#9ca3af}.vue-simple-select-container [role=button],.vue-simple-select-container button{cursor:pointer}.vue-simple-select-container table{border-collapse:collapse}.vue-simple-select-container h1,.vue-simple-select-container h2,.vue-simple-select-container h3,.vue-simple-select-container h4,.vue-simple-select-container h5,.vue-simple-select-container h6{font-size:inherit;font-weight:inherit}.vue-simple-select-container a{color:inherit;text-decoration:inherit}.vue-simple-select-container button,.vue-simple-select-container input,.vue-simple-select-container optgroup,.vue-simple-select-container select,.vue-simple-select-container textarea{padding:0;line-height:inherit;color:inherit}.vue-simple-select-container code,.vue-simple-select-container kbd,.vue-simple-select-container pre,.vue-simple-select-container samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.vue-simple-select-container audio,.vue-simple-select-container canvas,.vue-simple-select-container embed,.vue-simple-select-container iframe,.vue-simple-select-container img,.vue-simple-select-container object,.vue-simple-select-container svg,.vue-simple-select-container video{display:block;vertical-align:middle}.vue-simple-select-container img,.vue-simple-select-container video{max-width:100%;height:auto}.vue-simple-select-container .vue-simple-select-button{--tw-border-opacity:1;border-color:rgba(243,244,246,var(--tw-border-opacity));border-width:1px;display:flex;align-items:center;padding:.5rem;--tw-shadow:0 1px 2px 0 rgba(0,0,0,0.05)}.vue-simple-select-container .vue-simple-select-button,.vue-simple-select-container .vue-simple-select-dropdown{border-radius:.25rem;min-width:100%;box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow);width:max-content}.vue-simple-select-container .vue-simple-select-dropdown{padding-top:.25rem;padding-bottom:.25rem;position:absolute;left:0;top:100%;--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06)}.vue-simple-select-container .vue-simple-select-option:hover{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.vue-simple-select-container .vue-simple-select-option{padding:.5rem .75rem;text-align:left;width:100%;transition-property:background-color,border-color,color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.vue-simple-select-container .vue-simple-select-option.selected{--tw-bg-opacity:1;background-color:rgba(219,234,254,var(--tw-bg-opacity));font-weight:500;--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity))}.vue-simple-select-container .vue-simple-select-icon{height:1rem;margin-left:auto;width:1rem;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.vue-simple-select-container .vue-simple-select-icon.reverse{--tw-rotate:180deg}.vue-simple-select-container .vue-simple-select-placeholder,.vue-simple-select-container .vue-simple-select-selected{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.vue-simple-select-container .vue-simple-select-label{font-weight:700;--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


var __vue_scope_id__ = undefined;
/* module identifier */

var __vue_module_identifier__ = "data-v-46be17c1";
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject shadow dom */

var __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, createInjectorSSR, undefined);// Import vue component

// Default export is installable instance of component.
// IIFE injects install function into component, allowing component
// to be registered via Vue.use() as well as Vue.component(),
var component = /*#__PURE__*/(function () {
  // Assign InstallableComponent type
  var installable = __vue_component__; // Attach install function executed by Vue.use()

  installable.install = function (Vue) {
    Vue.component('VueSimpleSelect', installable);
  };

  return installable;
})(); // It's possible to expose named exports when writing components that can
// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';
// export const RollupDemoDirective = directive;
var namedExports=/*#__PURE__*/Object.freeze({__proto__:null,'default': component});// only expose one global var, with named exports exposed as properties of
// that global var (eg. plugin.namedExport)

Object.entries(namedExports).forEach(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      exportName = _ref2[0],
      exported = _ref2[1];

  if (exportName !== 'default') component[exportName] = exported;
});module.exports=component;