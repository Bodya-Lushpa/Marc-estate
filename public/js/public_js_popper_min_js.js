/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["public_js_popper_min_js"],{

/***/ "./public/js/popper.min.js":
/*!*********************************!*\
  !*** ./public/js/popper.min.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/*\r\n Copyright (C) Federico Zivolo 2018\r\n Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).\r\n */\n(function (e, t) {\n  'object' == ( false ? 0 : _typeof(exports)) && 'undefined' != \"object\" ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n})(this, function () {\n  'use strict';\n\n  function e(e) {\n    return e && '[object Function]' === {}.toString.call(e);\n  }\n  function t(e, t) {\n    if (1 !== e.nodeType) return [];\n    var o = getComputedStyle(e, null);\n    return t ? o[t] : o;\n  }\n  function o(e) {\n    return 'HTML' === e.nodeName ? e : e.parentNode || e.host;\n  }\n  function n(e) {\n    if (!e) return document.body;\n    switch (e.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return e.ownerDocument.body;\n      case '#document':\n        return e.body;\n    }\n    var i = t(e),\n      r = i.overflow,\n      p = i.overflowX,\n      s = i.overflowY;\n    return /(auto|scroll|overlay)/.test(r + s + p) ? e : n(o(e));\n  }\n  function r(e) {\n    if (!e) return document.documentElement;\n    for (var o = ie(10) ? document.body : null, n = e.offsetParent; n === o && e.nextElementSibling;) {\n      n = (e = e.nextElementSibling).offsetParent;\n    }\n    var i = n && n.nodeName;\n    return i && 'BODY' !== i && 'HTML' !== i ? -1 !== ['TD', 'TABLE'].indexOf(n.nodeName) && 'static' === t(n, 'position') ? r(n) : n : e ? e.ownerDocument.documentElement : document.documentElement;\n  }\n  function p(e) {\n    var t = e.nodeName;\n    return 'BODY' !== t && ('HTML' === t || r(e.firstElementChild) === e);\n  }\n  function s(e) {\n    return null === e.parentNode ? e : s(e.parentNode);\n  }\n  function d(e, t) {\n    if (!e || !e.nodeType || !t || !t.nodeType) return document.documentElement;\n    var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,\n      n = o ? e : t,\n      i = o ? t : e,\n      a = document.createRange();\n    a.setStart(n, 0), a.setEnd(i, 0);\n    var l = a.commonAncestorContainer;\n    if (e !== l && t !== l || n.contains(i)) return p(l) ? l : r(l);\n    var f = s(e);\n    return f.host ? d(f.host, t) : d(e, s(t).host);\n  }\n  function a(e) {\n    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 'top',\n      o = 'top' === t ? 'scrollTop' : 'scrollLeft',\n      n = e.nodeName;\n    if ('BODY' === n || 'HTML' === n) {\n      var i = e.ownerDocument.documentElement,\n        r = e.ownerDocument.scrollingElement || i;\n      return r[o];\n    }\n    return e[o];\n  }\n  function l(e, t) {\n    var o = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],\n      n = a(t, 'top'),\n      i = a(t, 'left'),\n      r = o ? -1 : 1;\n    return e.top += n * r, e.bottom += n * r, e.left += i * r, e.right += i * r, e;\n  }\n  function f(e, t) {\n    var o = 'x' === t ? 'Left' : 'Top',\n      n = 'Left' == o ? 'Right' : 'Bottom';\n    return parseFloat(e['border' + o + 'Width'], 10) + parseFloat(e['border' + n + 'Width'], 10);\n  }\n  function m(e, t, o, n) {\n    return Q(t['offset' + e], t['scroll' + e], o['client' + e], o['offset' + e], o['scroll' + e], ie(10) ? o['offset' + e] + n['margin' + ('Height' === e ? 'Top' : 'Left')] + n['margin' + ('Height' === e ? 'Bottom' : 'Right')] : 0);\n  }\n  function h() {\n    var e = document.body,\n      t = document.documentElement,\n      o = ie(10) && getComputedStyle(t);\n    return {\n      height: m('Height', e, t, o),\n      width: m('Width', e, t, o)\n    };\n  }\n  function c(e) {\n    return de({}, e, {\n      right: e.left + e.width,\n      bottom: e.top + e.height\n    });\n  }\n  function g(e) {\n    var o = {};\n    try {\n      if (ie(10)) {\n        o = e.getBoundingClientRect();\n        var n = a(e, 'top'),\n          i = a(e, 'left');\n        o.top += n, o.left += i, o.bottom += n, o.right += i;\n      } else o = e.getBoundingClientRect();\n    } catch (t) {}\n    var r = {\n        left: o.left,\n        top: o.top,\n        width: o.right - o.left,\n        height: o.bottom - o.top\n      },\n      p = 'HTML' === e.nodeName ? h() : {},\n      s = p.width || e.clientWidth || r.right - r.left,\n      d = p.height || e.clientHeight || r.bottom - r.top,\n      l = e.offsetWidth - s,\n      m = e.offsetHeight - d;\n    if (l || m) {\n      var g = t(e);\n      l -= f(g, 'x'), m -= f(g, 'y'), r.width -= l, r.height -= m;\n    }\n    return c(r);\n  }\n  function u(e, o) {\n    var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],\n      r = ie(10),\n      p = 'HTML' === o.nodeName,\n      s = g(e),\n      d = g(o),\n      a = n(e),\n      f = t(o),\n      m = parseFloat(f.borderTopWidth, 10),\n      h = parseFloat(f.borderLeftWidth, 10);\n    i && 'HTML' === o.nodeName && (d.top = Q(d.top, 0), d.left = Q(d.left, 0));\n    var u = c({\n      top: s.top - d.top - m,\n      left: s.left - d.left - h,\n      width: s.width,\n      height: s.height\n    });\n    if (u.marginTop = 0, u.marginLeft = 0, !r && p) {\n      var b = parseFloat(f.marginTop, 10),\n        y = parseFloat(f.marginLeft, 10);\n      u.top -= m - b, u.bottom -= m - b, u.left -= h - y, u.right -= h - y, u.marginTop = b, u.marginLeft = y;\n    }\n    return (r && !i ? o.contains(a) : o === a && 'BODY' !== a.nodeName) && (u = l(u, o)), u;\n  }\n  function b(e) {\n    var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],\n      o = e.ownerDocument.documentElement,\n      n = u(e, o),\n      i = Q(o.clientWidth, window.innerWidth || 0),\n      r = Q(o.clientHeight, window.innerHeight || 0),\n      p = t ? 0 : a(o),\n      s = t ? 0 : a(o, 'left'),\n      d = {\n        top: p - n.top + n.marginTop,\n        left: s - n.left + n.marginLeft,\n        width: i,\n        height: r\n      };\n    return c(d);\n  }\n  function y(e) {\n    var n = e.nodeName;\n    return 'BODY' === n || 'HTML' === n ? !1 : 'fixed' === t(e, 'position') || y(o(e));\n  }\n  function w(e) {\n    if (!e || !e.parentElement || ie()) return document.documentElement;\n    for (var o = e.parentElement; o && 'none' === t(o, 'transform');) {\n      o = o.parentElement;\n    }\n    return o || document.documentElement;\n  }\n  function E(e, t, i, r) {\n    var p = 4 < arguments.length && void 0 !== arguments[4] && arguments[4],\n      s = {\n        top: 0,\n        left: 0\n      },\n      a = p ? w(e) : d(e, t);\n    if ('viewport' === r) s = b(a, p);else {\n      var l;\n      'scrollParent' === r ? (l = n(o(t)), 'BODY' === l.nodeName && (l = e.ownerDocument.documentElement)) : 'window' === r ? l = e.ownerDocument.documentElement : l = r;\n      var f = u(l, a, p);\n      if ('HTML' === l.nodeName && !y(a)) {\n        var m = h(),\n          c = m.height,\n          g = m.width;\n        s.top += f.top - f.marginTop, s.bottom = c + f.top, s.left += f.left - f.marginLeft, s.right = g + f.left;\n      } else s = f;\n    }\n    return s.left += i, s.top += i, s.right -= i, s.bottom -= i, s;\n  }\n  function v(e) {\n    var t = e.width,\n      o = e.height;\n    return t * o;\n  }\n  function x(e, t, o, n, i) {\n    var r = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 0;\n    if (-1 === e.indexOf('auto')) return e;\n    var p = E(o, n, r, i),\n      s = {\n        top: {\n          width: p.width,\n          height: t.top - p.top\n        },\n        right: {\n          width: p.right - t.right,\n          height: p.height\n        },\n        bottom: {\n          width: p.width,\n          height: p.bottom - t.bottom\n        },\n        left: {\n          width: t.left - p.left,\n          height: p.height\n        }\n      },\n      d = Object.keys(s).map(function (e) {\n        return de({\n          key: e\n        }, s[e], {\n          area: v(s[e])\n        });\n      }).sort(function (e, t) {\n        return t.area - e.area;\n      }),\n      a = d.filter(function (e) {\n        var t = e.width,\n          n = e.height;\n        return t >= o.clientWidth && n >= o.clientHeight;\n      }),\n      l = 0 < a.length ? a[0].key : d[0].key,\n      f = e.split('-')[1];\n    return l + (f ? '-' + f : '');\n  }\n  function O(e, t, o) {\n    var n = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null,\n      i = n ? w(t) : d(t, o);\n    return u(o, i, n);\n  }\n  function L(e) {\n    var t = getComputedStyle(e),\n      o = parseFloat(t.marginTop) + parseFloat(t.marginBottom),\n      n = parseFloat(t.marginLeft) + parseFloat(t.marginRight),\n      i = {\n        width: e.offsetWidth + n,\n        height: e.offsetHeight + o\n      };\n    return i;\n  }\n  function S(e) {\n    var t = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return e.replace(/left|right|bottom|top/g, function (e) {\n      return t[e];\n    });\n  }\n  function T(e, t, o) {\n    o = o.split('-')[0];\n    var n = L(e),\n      i = {\n        width: n.width,\n        height: n.height\n      },\n      r = -1 !== ['right', 'left'].indexOf(o),\n      p = r ? 'top' : 'left',\n      s = r ? 'left' : 'top',\n      d = r ? 'height' : 'width',\n      a = r ? 'width' : 'height';\n    return i[p] = t[p] + t[d] / 2 - n[d] / 2, i[s] = o === s ? t[s] - n[a] : t[S(s)], i;\n  }\n  function D(e, t) {\n    return Array.prototype.find ? e.find(t) : e.filter(t)[0];\n  }\n  function C(e, t, o) {\n    if (Array.prototype.findIndex) return e.findIndex(function (e) {\n      return e[t] === o;\n    });\n    var n = D(e, function (e) {\n      return e[t] === o;\n    });\n    return e.indexOf(n);\n  }\n  function N(t, o, n) {\n    var i = void 0 === n ? t : t.slice(0, C(t, 'name', n));\n    return i.forEach(function (t) {\n      t['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      var n = t['function'] || t.fn;\n      t.enabled && e(n) && (o.offsets.popper = c(o.offsets.popper), o.offsets.reference = c(o.offsets.reference), o = n(o, t));\n    }), o;\n  }\n  function k() {\n    if (!this.state.isDestroyed) {\n      var e = {\n        instance: this,\n        styles: {},\n        arrowStyles: {},\n        attributes: {},\n        flipped: !1,\n        offsets: {}\n      };\n      e.offsets.reference = O(this.state, this.popper, this.reference, this.options.positionFixed), e.placement = x(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets.popper = T(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute', e = N(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e));\n    }\n  }\n  function P(e, t) {\n    return e.some(function (e) {\n      var o = e.name,\n        n = e.enabled;\n      return n && o === t;\n    });\n  }\n  function W(e) {\n    for (var t = [!1, 'ms', 'Webkit', 'Moz', 'O'], o = e.charAt(0).toUpperCase() + e.slice(1), n = 0; n < t.length; n++) {\n      var i = t[n],\n        r = i ? '' + i + o : e;\n      if ('undefined' != typeof document.body.style[r]) return r;\n    }\n    return null;\n  }\n  function B() {\n    return this.state.isDestroyed = !0, P(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '', this.popper.style.bottom = '', this.popper.style.willChange = '', this.popper.style[W('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;\n  }\n  function H(e) {\n    var t = e.ownerDocument;\n    return t ? t.defaultView : window;\n  }\n  function A(e, t, o, i) {\n    var r = 'BODY' === e.nodeName,\n      p = r ? e.ownerDocument.defaultView : e;\n    p.addEventListener(t, o, {\n      passive: !0\n    }), r || A(n(p.parentNode), t, o, i), i.push(p);\n  }\n  function I(e, t, o, i) {\n    o.updateBound = i, H(e).addEventListener('resize', o.updateBound, {\n      passive: !0\n    });\n    var r = n(e);\n    return A(r, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = r, o.eventsEnabled = !0, o;\n  }\n  function M() {\n    this.state.eventsEnabled || (this.state = I(this.reference, this.options, this.state, this.scheduleUpdate));\n  }\n  function F(e, t) {\n    return H(e).removeEventListener('resize', t.updateBound), t.scrollParents.forEach(function (e) {\n      e.removeEventListener('scroll', t.updateBound);\n    }), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t;\n  }\n  function R() {\n    this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = F(this.reference, this.state));\n  }\n  function U(e) {\n    return '' !== e && !isNaN(parseFloat(e)) && isFinite(e);\n  }\n  function Y(e, t) {\n    Object.keys(t).forEach(function (o) {\n      var n = '';\n      -1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(o) && U(t[o]) && (n = 'px'), e.style[o] = t[o] + n;\n    });\n  }\n  function j(e, t) {\n    Object.keys(t).forEach(function (o) {\n      var n = t[o];\n      !1 === n ? e.removeAttribute(o) : e.setAttribute(o, t[o]);\n    });\n  }\n  function q(e, t, o) {\n    var n = D(e, function (e) {\n        var o = e.name;\n        return o === t;\n      }),\n      i = !!n && e.some(function (e) {\n        return e.name === o && e.enabled && e.order < n.order;\n      });\n    if (!i) {\n      var r = '`' + t + '`';\n      console.warn('`' + o + '`' + ' modifier is required by ' + r + ' modifier in order to work, be sure to include it before ' + r + '!');\n    }\n    return i;\n  }\n  function K(e) {\n    return 'end' === e ? 'start' : 'start' === e ? 'end' : e;\n  }\n  function V(e) {\n    var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],\n      o = le.indexOf(e),\n      n = le.slice(o + 1).concat(le.slice(0, o));\n    return t ? n.reverse() : n;\n  }\n  function z(e, t, o, n) {\n    var i = e.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/),\n      r = +i[1],\n      p = i[2];\n    if (!r) return e;\n    if (0 === p.indexOf('%')) {\n      var s;\n      switch (p) {\n        case '%p':\n          s = o;\n          break;\n        case '%':\n        case '%r':\n        default:\n          s = n;\n      }\n      var d = c(s);\n      return d[t] / 100 * r;\n    }\n    if ('vh' === p || 'vw' === p) {\n      var a;\n      return a = 'vh' === p ? Q(document.documentElement.clientHeight, window.innerHeight || 0) : Q(document.documentElement.clientWidth, window.innerWidth || 0), a / 100 * r;\n    }\n    return r;\n  }\n  function G(e, t, o, n) {\n    var i = [0, 0],\n      r = -1 !== ['right', 'left'].indexOf(n),\n      p = e.split(/(\\+|\\-)/).map(function (e) {\n        return e.trim();\n      }),\n      s = p.indexOf(D(p, function (e) {\n        return -1 !== e.search(/,|\\s/);\n      }));\n    p[s] && -1 === p[s].indexOf(',') && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    var d = /\\s*,\\s*|\\s+/,\n      a = -1 === s ? [p] : [p.slice(0, s).concat([p[s].split(d)[0]]), [p[s].split(d)[1]].concat(p.slice(s + 1))];\n    return a = a.map(function (e, n) {\n      var i = (1 === n ? !r : r) ? 'height' : 'width',\n        p = !1;\n      return e.reduce(function (e, t) {\n        return '' === e[e.length - 1] && -1 !== ['+', '-'].indexOf(t) ? (e[e.length - 1] = t, p = !0, e) : p ? (e[e.length - 1] += t, p = !1, e) : e.concat(t);\n      }, []).map(function (e) {\n        return z(e, i, t, o);\n      });\n    }), a.forEach(function (e, t) {\n      e.forEach(function (o, n) {\n        U(o) && (i[t] += o * ('-' === e[n - 1] ? -1 : 1));\n      });\n    }), i;\n  }\n  function _(e, t) {\n    var o,\n      n = t.offset,\n      i = e.placement,\n      r = e.offsets,\n      p = r.popper,\n      s = r.reference,\n      d = i.split('-')[0];\n    return o = U(+n) ? [+n, 0] : G(n, p, s, d), 'left' === d ? (p.top += o[0], p.left -= o[1]) : 'right' === d ? (p.top += o[0], p.left += o[1]) : 'top' === d ? (p.left += o[0], p.top -= o[1]) : 'bottom' === d && (p.left += o[0], p.top += o[1]), e.popper = p, e;\n  }\n  for (var X = Math.min, J = Math.floor, Q = Math.max, Z = 'undefined' != typeof window && 'undefined' != typeof document, $ = ['Edge', 'Trident', 'Firefox'], ee = 0, te = 0; te < $.length; te += 1) {\n    if (Z && 0 <= navigator.userAgent.indexOf($[te])) {\n      ee = 1;\n      break;\n    }\n  }\n  var i = Z && window.Promise,\n    oe = i ? function (e) {\n      var t = !1;\n      return function () {\n        t || (t = !0, window.Promise.resolve().then(function () {\n          t = !1, e();\n        }));\n      };\n    } : function (e) {\n      var t = !1;\n      return function () {\n        t || (t = !0, setTimeout(function () {\n          t = !1, e();\n        }, ee));\n      };\n    },\n    ne = {},\n    ie = function ie() {\n      var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 'all';\n      return (e = e.toString(), ne.hasOwnProperty(e)) ? ne[e] : ('11' === e ? ne[e] = -1 !== navigator.userAgent.indexOf('Trident') : '10' === e ? ne[e] = -1 !== navigator.appVersion.indexOf('MSIE 10') : 'all' === e ? ne[e] = -1 !== navigator.userAgent.indexOf('Trident') || -1 !== navigator.userAgent.indexOf('MSIE') : void 0, ne.all = ne.all || Object.keys(ne).some(function (e) {\n        return ne[e];\n      }), ne[e]);\n    },\n    re = function re(e, t) {\n      if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');\n    },\n    pe = function () {\n      function e(e, t) {\n        for (var o, n = 0; n < t.length; n++) {\n          o = t[n], o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n        }\n      }\n      return function (t, o, n) {\n        return o && e(t.prototype, o), n && e(t, n), t;\n      };\n    }(),\n    se = function se(e, t, o) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: o,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = o, e;\n    },\n    de = Object.assign || function (e) {\n      for (var t, o = 1; o < arguments.length; o++) {\n        for (var n in t = arguments[o], t) {\n          Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n        }\n      }\n      return e;\n    },\n    ae = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'],\n    le = ae.slice(3),\n    fe = {\n      FLIP: 'flip',\n      CLOCKWISE: 'clockwise',\n      COUNTERCLOCKWISE: 'counterclockwise'\n    },\n    me = function () {\n      function t(o, n) {\n        var i = this,\n          r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {};\n        re(this, t), this.scheduleUpdate = function () {\n          return requestAnimationFrame(i.update);\n        }, this.update = oe(this.update.bind(this)), this.options = de({}, t.Defaults, r), this.state = {\n          isDestroyed: !1,\n          isCreated: !1,\n          scrollParents: []\n        }, this.reference = o && o.jquery ? o[0] : o, this.popper = n && n.jquery ? n[0] : n, this.options.modifiers = {}, Object.keys(de({}, t.Defaults.modifiers, r.modifiers)).forEach(function (e) {\n          i.options.modifiers[e] = de({}, t.Defaults.modifiers[e] || {}, r.modifiers ? r.modifiers[e] : {});\n        }), this.modifiers = Object.keys(this.options.modifiers).map(function (e) {\n          return de({\n            name: e\n          }, i.options.modifiers[e]);\n        }).sort(function (e, t) {\n          return e.order - t.order;\n        }), this.modifiers.forEach(function (t) {\n          t.enabled && e(t.onLoad) && t.onLoad(i.reference, i.popper, i.options, t, i.state);\n        }), this.update();\n        var p = this.options.eventsEnabled;\n        p && this.enableEventListeners(), this.state.eventsEnabled = p;\n      }\n      return pe(t, [{\n        key: 'update',\n        value: function value() {\n          return k.call(this);\n        }\n      }, {\n        key: 'destroy',\n        value: function value() {\n          return B.call(this);\n        }\n      }, {\n        key: 'enableEventListeners',\n        value: function value() {\n          return M.call(this);\n        }\n      }, {\n        key: 'disableEventListeners',\n        value: function value() {\n          return R.call(this);\n        }\n      }]), t;\n    }();\n  return me.Utils = ('undefined' == typeof window ? __webpack_require__.g : window).PopperUtils, me.placements = ae, me.Defaults = {\n    placement: 'bottom',\n    positionFixed: !1,\n    eventsEnabled: !0,\n    removeOnDestroy: !1,\n    onCreate: function onCreate() {},\n    onUpdate: function onUpdate() {},\n    modifiers: {\n      shift: {\n        order: 100,\n        enabled: !0,\n        fn: function fn(e) {\n          var t = e.placement,\n            o = t.split('-')[0],\n            n = t.split('-')[1];\n          if (n) {\n            var i = e.offsets,\n              r = i.reference,\n              p = i.popper,\n              s = -1 !== ['bottom', 'top'].indexOf(o),\n              d = s ? 'left' : 'top',\n              a = s ? 'width' : 'height',\n              l = {\n                start: se({}, d, r[d]),\n                end: se({}, d, r[d] + r[a] - p[a])\n              };\n            e.offsets.popper = de({}, p, l[n]);\n          }\n          return e;\n        }\n      },\n      offset: {\n        order: 200,\n        enabled: !0,\n        fn: _,\n        offset: 0\n      },\n      preventOverflow: {\n        order: 300,\n        enabled: !0,\n        fn: function fn(e, t) {\n          var o = t.boundariesElement || r(e.instance.popper);\n          e.instance.reference === o && (o = r(o));\n          var n = E(e.instance.popper, e.instance.reference, t.padding, o, e.positionFixed);\n          t.boundaries = n;\n          var i = t.priority,\n            p = e.offsets.popper,\n            s = {\n              primary: function primary(e) {\n                var o = p[e];\n                return p[e] < n[e] && !t.escapeWithReference && (o = Q(p[e], n[e])), se({}, e, o);\n              },\n              secondary: function secondary(e) {\n                var o = 'right' === e ? 'left' : 'top',\n                  i = p[o];\n                return p[e] > n[e] && !t.escapeWithReference && (i = X(p[o], n[e] - ('right' === e ? p.width : p.height))), se({}, o, i);\n              }\n            };\n          return i.forEach(function (e) {\n            var t = -1 === ['left', 'top'].indexOf(e) ? 'secondary' : 'primary';\n            p = de({}, p, s[t](e));\n          }), e.offsets.popper = p, e;\n        },\n        priority: ['left', 'right', 'top', 'bottom'],\n        padding: 5,\n        boundariesElement: 'scrollParent'\n      },\n      keepTogether: {\n        order: 400,\n        enabled: !0,\n        fn: function fn(e) {\n          var t = e.offsets,\n            o = t.popper,\n            n = t.reference,\n            i = e.placement.split('-')[0],\n            r = J,\n            p = -1 !== ['top', 'bottom'].indexOf(i),\n            s = p ? 'right' : 'bottom',\n            d = p ? 'left' : 'top',\n            a = p ? 'width' : 'height';\n          return o[s] < r(n[d]) && (e.offsets.popper[d] = r(n[d]) - o[a]), o[d] > r(n[s]) && (e.offsets.popper[d] = r(n[s])), e;\n        }\n      },\n      arrow: {\n        order: 500,\n        enabled: !0,\n        fn: function fn(e, o) {\n          var n;\n          if (!q(e.instance.modifiers, 'arrow', 'keepTogether')) return e;\n          var i = o.element;\n          if ('string' == typeof i) {\n            if (i = e.instance.popper.querySelector(i), !i) return e;\n          } else if (!e.instance.popper.contains(i)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e;\n          var r = e.placement.split('-')[0],\n            p = e.offsets,\n            s = p.popper,\n            d = p.reference,\n            a = -1 !== ['left', 'right'].indexOf(r),\n            l = a ? 'height' : 'width',\n            f = a ? 'Top' : 'Left',\n            m = f.toLowerCase(),\n            h = a ? 'left' : 'top',\n            g = a ? 'bottom' : 'right',\n            u = L(i)[l];\n          d[g] - u < s[m] && (e.offsets.popper[m] -= s[m] - (d[g] - u)), d[m] + u > s[g] && (e.offsets.popper[m] += d[m] + u - s[g]), e.offsets.popper = c(e.offsets.popper);\n          var b = d[m] + d[l] / 2 - u / 2,\n            y = t(e.instance.popper),\n            w = parseFloat(y['margin' + f], 10),\n            E = parseFloat(y['border' + f + 'Width'], 10),\n            v = b - e.offsets.popper[m] - w - E;\n          return v = Q(X(s[l] - u, v), 0), e.arrowElement = i, e.offsets.arrow = (n = {}, se(n, m, Math.round(v)), se(n, h, ''), n), e;\n        },\n        element: '[x-arrow]'\n      },\n      flip: {\n        order: 600,\n        enabled: !0,\n        fn: function fn(e, t) {\n          if (P(e.instance.modifiers, 'inner')) return e;\n          if (e.flipped && e.placement === e.originalPlacement) return e;\n          var o = E(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed),\n            n = e.placement.split('-')[0],\n            i = S(n),\n            r = e.placement.split('-')[1] || '',\n            p = [];\n          switch (t.behavior) {\n            case fe.FLIP:\n              p = [n, i];\n              break;\n            case fe.CLOCKWISE:\n              p = V(n);\n              break;\n            case fe.COUNTERCLOCKWISE:\n              p = V(n, !0);\n              break;\n            default:\n              p = t.behavior;\n          }\n          return p.forEach(function (s, d) {\n            if (n !== s || p.length === d + 1) return e;\n            n = e.placement.split('-')[0], i = S(n);\n            var a = e.offsets.popper,\n              l = e.offsets.reference,\n              f = J,\n              m = 'left' === n && f(a.right) > f(l.left) || 'right' === n && f(a.left) < f(l.right) || 'top' === n && f(a.bottom) > f(l.top) || 'bottom' === n && f(a.top) < f(l.bottom),\n              h = f(a.left) < f(o.left),\n              c = f(a.right) > f(o.right),\n              g = f(a.top) < f(o.top),\n              u = f(a.bottom) > f(o.bottom),\n              b = 'left' === n && h || 'right' === n && c || 'top' === n && g || 'bottom' === n && u,\n              y = -1 !== ['top', 'bottom'].indexOf(n),\n              w = !!t.flipVariations && (y && 'start' === r && h || y && 'end' === r && c || !y && 'start' === r && g || !y && 'end' === r && u);\n            (m || b || w) && (e.flipped = !0, (m || b) && (n = p[d + 1]), w && (r = K(r)), e.placement = n + (r ? '-' + r : ''), e.offsets.popper = de({}, e.offsets.popper, T(e.instance.popper, e.offsets.reference, e.placement)), e = N(e.instance.modifiers, e, 'flip'));\n          }), e;\n        },\n        behavior: 'flip',\n        padding: 5,\n        boundariesElement: 'viewport'\n      },\n      inner: {\n        order: 700,\n        enabled: !1,\n        fn: function fn(e) {\n          var t = e.placement,\n            o = t.split('-')[0],\n            n = e.offsets,\n            i = n.popper,\n            r = n.reference,\n            p = -1 !== ['left', 'right'].indexOf(o),\n            s = -1 === ['top', 'left'].indexOf(o);\n          return i[p ? 'left' : 'top'] = r[o] - (s ? i[p ? 'width' : 'height'] : 0), e.placement = S(t), e.offsets.popper = c(i), e;\n        }\n      },\n      hide: {\n        order: 800,\n        enabled: !0,\n        fn: function fn(e) {\n          if (!q(e.instance.modifiers, 'hide', 'preventOverflow')) return e;\n          var t = e.offsets.reference,\n            o = D(e.instance.modifiers, function (e) {\n              return 'preventOverflow' === e.name;\n            }).boundaries;\n          if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) {\n            if (!0 === e.hide) return e;\n            e.hide = !0, e.attributes['x-out-of-boundaries'] = '';\n          } else {\n            if (!1 === e.hide) return e;\n            e.hide = !1, e.attributes['x-out-of-boundaries'] = !1;\n          }\n          return e;\n        }\n      },\n      computeStyle: {\n        order: 850,\n        enabled: !0,\n        fn: function fn(e, t) {\n          var o = t.x,\n            n = t.y,\n            i = e.offsets.popper,\n            p = D(e.instance.modifiers, function (e) {\n              return 'applyStyle' === e.name;\n            }).gpuAcceleration;\n          void 0 !== p && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n          var s,\n            d,\n            a = void 0 === p ? t.gpuAcceleration : p,\n            l = r(e.instance.popper),\n            f = g(l),\n            m = {\n              position: i.position\n            },\n            h = {\n              left: J(i.left),\n              top: J(i.top),\n              bottom: J(i.bottom),\n              right: J(i.right)\n            },\n            c = 'bottom' === o ? 'top' : 'bottom',\n            u = 'right' === n ? 'left' : 'right',\n            b = W('transform');\n          if (d = 'bottom' == c ? -f.height + h.bottom : h.top, s = 'right' == u ? -f.width + h.right : h.left, a && b) m[b] = 'translate3d(' + s + 'px, ' + d + 'px, 0)', m[c] = 0, m[u] = 0, m.willChange = 'transform';else {\n            var y = 'bottom' == c ? -1 : 1,\n              w = 'right' == u ? -1 : 1;\n            m[c] = d * y, m[u] = s * w, m.willChange = c + ', ' + u;\n          }\n          var E = {\n            \"x-placement\": e.placement\n          };\n          return e.attributes = de({}, E, e.attributes), e.styles = de({}, m, e.styles), e.arrowStyles = de({}, e.offsets.arrow, e.arrowStyles), e;\n        },\n        gpuAcceleration: !0,\n        x: 'bottom',\n        y: 'right'\n      },\n      applyStyle: {\n        order: 900,\n        enabled: !0,\n        fn: function fn(e) {\n          return Y(e.instance.popper, e.styles), j(e.instance.popper, e.attributes), e.arrowElement && Object.keys(e.arrowStyles).length && Y(e.arrowElement, e.arrowStyles), e;\n        },\n        onLoad: function onLoad(e, t, o, n, i) {\n          var r = O(i, t, e, o.positionFixed),\n            p = x(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding);\n          return t.setAttribute('x-placement', p), Y(t, {\n            position: o.positionFixed ? 'fixed' : 'absolute'\n          }), o;\n        },\n        gpuAcceleration: void 0\n      }\n    }\n  }, me;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/js/popper.min.js\n");

/***/ })

}]);